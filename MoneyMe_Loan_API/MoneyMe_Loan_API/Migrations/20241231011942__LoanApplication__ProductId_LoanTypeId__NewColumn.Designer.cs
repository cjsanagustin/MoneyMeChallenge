// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyMe_Loan_API.Models;

#nullable disable

namespace MoneyMe_Loan_API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241231011942__LoanApplication__ProductId_LoanTypeId__NewColumn")]
    partial class _LoanApplication__ProductId_LoanTypeId__NewColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MoneyMe_Loan_API.Models.BlacklistedDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("BlacklistedDomain");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "hotmail.com"
                        },
                        new
                        {
                            Id = 2,
                            Description = "yahoo.com"
                        });
                });

            modelBuilder.Entity("MoneyMe_Loan_API.Models.BlacklistedMobileNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("BlacklistedMobileNumber");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "1111111111"
                        },
                        new
                        {
                            Id = 2,
                            Description = "2222222222"
                        });
                });

            modelBuilder.Entity("MoneyMe_Loan_API.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(320)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PrePopulateAmountRequired")
                        .HasColumnType("decimal(14,4)");

                    b.Property<int>("PrePopulateMonthlyTerm")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<string>("URLGUID")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("FirstName", "LastName", "DateOfBirth")
                        .IsUnique();

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("MoneyMe_Loan_API.Models.LoanApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountRequired")
                        .HasColumnType("decimal(14,4)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(14,4)");

                    b.Property<int>("LoanTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MonthlyPayment")
                        .HasColumnType("decimal(14,4)");

                    b.Property<int>("MonthlyTerm")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LoanApplication");
                });

            modelBuilder.Entity("MoneyMe_Loan_API.Models.LoanType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("LoanType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Pay off credit cards or loans"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Buy or refinance a vehicle"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Home improvement"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Property acquisition costs"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Medical expenses"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Holiday"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Education expenses"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Wedding"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Solar and renewable energy"
                        });
                });

            modelBuilder.Entity("MoneyMe_Loan_API.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("FirstNoOfMonthsInterestFree")
                        .HasColumnType("int");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(14,4)");

                    b.Property<bool>("IsInterestFree")
                        .HasColumnType("bit");

                    b.Property<int>("MaxNoOfMonths")
                        .HasColumnType("int");

                    b.Property<int>("MinNoOfMonths")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "ProductA",
                            FirstNoOfMonthsInterestFree = 0,
                            InterestRate = 0m,
                            IsInterestFree = true,
                            MaxNoOfMonths = 0,
                            MinNoOfMonths = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "ProductB",
                            FirstNoOfMonthsInterestFree = 2,
                            InterestRate = 6.74m,
                            IsInterestFree = false,
                            MaxNoOfMonths = 0,
                            MinNoOfMonths = 6
                        },
                        new
                        {
                            Id = 3,
                            Description = "ProductC",
                            FirstNoOfMonthsInterestFree = 0,
                            InterestRate = 6.74m,
                            IsInterestFree = false,
                            MaxNoOfMonths = 0,
                            MinNoOfMonths = 1
                        });
                });

            modelBuilder.Entity("MoneyMe_Loan_API.Models.SystemConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Code", "Value")
                        .IsUnique();

                    b.ToTable("SystemConfiguration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "INTEREST_RATE",
                            Description = "Interest Rate",
                            Value = "6.74"
                        },
                        new
                        {
                            Id = 2,
                            Code = "TERM_SLIDER_MIN_MONTHS",
                            Description = "Minimum number of months to be used on the Term Slider",
                            Value = "1"
                        },
                        new
                        {
                            Id = 3,
                            Code = "TERM_SLIDER_MAX_MONTHS",
                            Description = "Maximum number of months to be used on the Term Slider",
                            Value = "60"
                        },
                        new
                        {
                            Id = 4,
                            Code = "ESTABLISHMENT_FEE",
                            Description = "Establishment Fee",
                            Value = "300"
                        },
                        new
                        {
                            Id = 5,
                            Code = "AMOUNT_SLIDER_MIN",
                            Description = "Minimum loan amount to be used on the Amount Slider",
                            Value = "2100"
                        },
                        new
                        {
                            Id = 6,
                            Code = "AMOUNT_SLIDER_MAX",
                            Description = "Maximum loan amount to be used on the Amount Slider",
                            Value = "15000"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
